[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform vec2 tiled_factor = vec2(5.0, 5.0);
uniform float aspect_ratio = 1;
uniform vec2 offset_scale = vec2(5.0, 5.0);

void fragment() {
	vec2 tiled_uvs = UV * tiled_factor;
	tiled_uvs.y *= aspect_ratio;
	
	vec2 waves_uv_offset;
	float a = 0.05;
	waves_uv_offset.x = a*cos(-TIME + (tiled_uvs.x + tiled_uvs.y)*offset_scale.x);
	waves_uv_offset.y = a*sin(TIME + (tiled_uvs.x + tiled_uvs.y)*offset_scale.y);
	
	COLOR = texture(TEXTURE, tiled_uvs * waves_uv_offset);
//	COLOR = texture(TEXTURE, tiled_uvs);
}"

[resource]
shader = SubResource( 1 )
shader_param/tiled_factor = Vector2( 1, 1 )
shader_param/aspect_ratio = 1.0
shader_param/offset_scale = Vector2( 5, 5 )
